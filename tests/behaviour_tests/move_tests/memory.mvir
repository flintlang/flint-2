import {{default}}.Memory;
import 0x1.Signer;

main(account: &signer) {
    Memory.publish(copy(account));
    assert(Memory.getSa(Signer.address_of(copy(account)), copy(account)) == 0, 1);
    assert(Memory.getSs(Signer.address_of(copy(account)), copy(account)) == 0x00000000000000000000000000000000, 1);
    assert(Memory.getVx(Signer.address_of(copy(account)), copy(account)) == 1, 2);

    Memory.setS(Signer.address_of(copy(account)), 1, 0x1, copy(account));

    assert(Memory.getSa(Signer.address_of(copy(account)), copy(account)) == 2, 3);
    assert(Memory.getSs(Signer.address_of(copy(account)), copy(account)) == 0x1, 4);

    Memory.setV1(Signer.address_of(copy(account)), 2, copy(account));
    assert(Memory.getVx(Signer.address_of(copy(account)), copy(account)) == 2, 5);

    Memory.setV2(Signer.address_of(copy(account)), 2, copy(account));
    assert(Memory.getVx(Signer.address_of(copy(account)), copy(account)) == 3, 6);

    Memory.setV3(Signer.address_of(copy(account)), true, 2, 3, copy(account));
    assert(Memory.getVx(Signer.address_of(copy(account)), copy(account)) == 3, 7);

    Memory.setV3(Signer.address_of(copy(account)), false, 2, 3, copy(account));
    assert(Memory.getVx(Signer.address_of(copy(account)), copy(account)) == 4, 8);

    return;
}