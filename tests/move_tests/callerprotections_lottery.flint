contract Lottery {
    var winnings: Int = 1000
    var players: Address[3] = [0x1, 0x2, 0x3]
    var people: [Address: Address] = [0x0: 0x0, 0x1: 0x1, 0x2: 0x2]
    var manager: Address = 0x1
}

Lottery :: (any) {
    public init() {}

    public func getFirstPerson() -> Address {
        return people[0x0]
    }

    public func getSecondPerson() -> Address {
        return people[0x1]
    }

    public func getLastPerson() -> Address {
        return people[0x2]
    }

    // should revert
    public func outOfBounds() -> Address {
        return people[0x3]
    }
}

Lottery :: (winner, manager) {
    func winner() -> Address {
        return 0x2
    }

    public func getWinnings() -> Int {
        return winnings
    }
}

Lottery :: (players, people) {
    public func firstAddressIsWinner() -> Bool{
        return people[0x1] == 0x2
    }
}

Lottery :: (lucky) {
  func lucky(caller_address: Address) -> Bool {
    return false
  }

  public func isWinner() -> Bool {
      return true
  }
}
