contract Counter {
    var count: Count
}

Counter :: (any) {
    public init() {
        count = Count()
    }

    public func record() mutates (count) {
        let x: [Adress] = 1
        count.increment(0x0, hey: 2)
    }

    public func cancel() mutates (count) {
        //count.decrement()
    }
}

struct Count {
    visible var value: Int

    public func increment(by: Int = 1) mutates (value) {
        value += by
    }

    public func decrement(by: Int = 1) mutates (value) {
        if (by > value) {
            value = 0
        } else {
            value -= by
        }
    }
}